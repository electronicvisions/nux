
#
# Mnemonic Maps
#
mmap new -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

array unset createdGroup
array set createdGroup {}
#
# Groups
#
if {[catch {group get -using [list ppu_bot]}]} {
set createdGroup([list ppu_bot]) 1
catch {group new -name ppu_bot -overlay 0}
}
if {[catch {group get -using [list ppu_top]}]} {
set createdGroup([list ppu_top]) 1
catch {group new -name ppu_top -overlay 0}
}
if {[catch {group get -using [list Group 1]}]} {
set createdGroup([list Group 1]) 1
catch {group new -name {Group 1} -overlay 0}
}
if {[catch {group get -using [list ppu_bot_omnibus_from_top]}]} {
set createdGroup([list ppu_bot_omnibus_from_top]) 1
catch {group new -name ppu_bot_omnibus_from_top -overlay 0}
}
if {[catch {group get -using [list core_reset_sync contributors]}]} {
set createdGroup([list core_reset_sync contributors]) 1
catch {group new -name {core_reset_sync contributors} -overlay 0}
}
if {[catch {group get -using [list ppu_top_omnibus_from_top]}]} {
set createdGroup([list ppu_top_omnibus_from_top]) 1
catch {group new -name ppu_top_omnibus_from_top -overlay 0}
}
if {[catch {group get -using [list hx_chip_control]}]} {
set createdGroup([list hx_chip_control]) 1
catch {group new -name hx_chip_control -overlay 0}
}
if {[catch {group get -using [list from_ppu_top]}]} {
set createdGroup([list from_ppu_top]) 1
catch {group new -name from_ppu_top -overlay 0}
}
if {[catch {group get -using [list from_ppu_bot]}]} {
set createdGroup([list from_ppu_bot]) 1
catch {group new -name from_ppu_bot -overlay 0}
}
if {[catch {group get -using [list from_l2]}]} {
set createdGroup([list from_l2]) 1
catch {group new -name from_l2 -overlay 0}
}
if {[catch {group get -using [list from_jtag]}]} {
set createdGroup([list from_jtag]) 1
catch {group new -name from_jtag -overlay 0}
}
if {[info exists createdGroup([list ppu_bot])]} {
group using ppu_bot
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_bottom.ppu.sleep}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_bottom.ppu.wakeup}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_bottom.ppu.clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_bottom.ppu.core_clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_bottom.ppu.core_reset}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_bottom.ppu.core_reset_sync}]} ] \
    ppu_bot_omnibus_from_top
}

if {[info exists createdGroup([list ppu_top])]} {
group using ppu_top
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_top.ppu.sleep}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_top.ppu.wakeup}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_top.ppu.clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_top.ppu.core_clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_top.ppu.core_reset}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_top.ppu.core_reset_sync}]} ] \
    ppu_top_omnibus_from_top
}

if {[info exists createdGroup([list Group 1])]} {
group using {Group 1}
group set -overlay 0
group set -comment {}
group clear 0 end

}

if {[info exists createdGroup([list ppu_bot_omnibus_from_top])]} {
group using ppu_bot_omnibus_from_top
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.Clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.MAddr[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.MByteEn[3:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.MCmd[2:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.MData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.MReset_n}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.MRespAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.SCmdAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.SData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_bot_sync.slave.SResp[1:0]}]} ]
}

if {[info exists createdGroup([list core_reset_sync contributors])]} {
group using {core_reset_sync contributors}
group set -overlay 0
group set -comment {simulator::hx_chip_control_tb_top.hx_cc.ppu_top.ppu.core_reset_sync contributors}
group clear 0 end
group insert \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_top.ppu.core_reset_sync}]} ]
}

if {[info exists createdGroup([list ppu_top_omnibus_from_top])]} {
group using ppu_top_omnibus_from_top
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.Clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.MAddr[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.MByteEn[3:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.MCmd[2:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.MData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.MReset_n}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.MRespAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.SCmdAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.SData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_subtree_ppu_top_sync.slave.SResp[1:0]}]} ]
}

if {[info exists createdGroup([list hx_chip_control])]} {
group using hx_chip_control
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    from_jtag \
    from_l2 \
    from_ppu_bot \
    from_ppu_top
}

if {[info exists createdGroup([list from_ppu_top])]} {
group using from_ppu_top
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.Clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.MAddr[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.MByteEn[3:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.MCmd[2:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.MData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.MReset_n}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.MRespAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.SCmdAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.SData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_top.slave.SResp[1:0]}]} ] \
    {### cdivider} \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.ppu_bottom.ppu.pu.fub_fxdpt.ir}]} ]
}

if {[info exists createdGroup([list from_ppu_bot])]} {
group using from_ppu_bot
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.Clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.MAddr[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.MByteEn[3:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.MCmd[2:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.MData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.MReset_n}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.MRespAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.SCmdAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.SData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.hx_cc.omnibus_master_ppu_bot.slave.SResp[1:0]}]} ]
}

if {[info exists createdGroup([list from_l2])]} {
group using from_l2
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.Clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.MAddr[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.MByteEn[3:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.MCmd[2:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.MData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.MReset_n}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.MRespAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.SCmdAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.SData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_l2.slave.SResp[1:0]}]} ]
}

if {[info exists createdGroup([list from_jtag])]} {
group using from_jtag
group set -overlay 0
group set -comment {}
group clear 0 end
group insert \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.Clk}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.MAddr[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.MByteEn[3:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.MCmd[2:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.MData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.MReset_n}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.MRespAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.SCmdAccept}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.SData[31:0]}]} ] \
    [subst  {[format {hx_chip_control_tb_top.omnibus_from_jtag.slave.SResp[1:0]}]} ]
}

set id [waveform add -signals [subst  {
	{[format {hx_chip_control_tb_top.hx_cc.ppu_bottom.ppu.pu.fub_fxdpt.ir}]}
	} ]]
waveform hierarchy collapse $id
set id [waveform add -signals [subst  {
	{[format {hx_chip_control_tb_top.hx_cc.ppu_bottom.ppu.pu.gpr_file.gpr[0:31]}]}
	} ]]
waveform hierarchy expand $id

waveform xview limits 0 14668000ps
