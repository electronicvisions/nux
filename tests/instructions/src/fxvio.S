#include "ppc_test.h"
#include "test_macros.h"

PPCTEST_CODE_BEGIN

#-------------------------------------------------------------
# Basic tests
#-------------------------------------------------------------

# Signature of TEST_SYNRAM_INX_LOOP is:
# testnum, veca, vecb, indexa, indexb, resa, resb

# The tests
TEST_FXVIO_CONFLICT(2, seqa, seqb, 0, 1, res2a, res2b)
TEST_FXVIO_CONFLICT(3, seqa, seqb, 0, 2, res3a, res3b)
TEST_FXVIO_CONFLICT(4, seqa, seqb, 0, 4, res4a, res4b)
TEST_FXVIO_CONFLICT(5, seqa, seqb, 0, 512 - 1, res5a, res5b)

TEST_PASSFAIL

PPCTEST_CODE_END

PPCTEST_DATA_BEGIN

TEST_DATA

.align 4
seqa:	.byte 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f
	.byte 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f
	.byte 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f
	.byte 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f
	.byte 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f
	.byte 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f
	.byte 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f
	.byte 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f
seqb:	.fill FXV_NUM_SLICES * FXV_BYTES_PER_SLICE, 1, 0x3f
res2a:	.fill FXV_NUM_SLICES * FXV_BYTES_PER_SLICE, 1, 0xff
res2b:	.fill FXV_NUM_SLICES * FXV_BYTES_PER_SLICE, 1, 0xff
res3a:	.fill FXV_NUM_SLICES * FXV_BYTES_PER_SLICE, 1, 0xff
res3b:	.fill FXV_NUM_SLICES * FXV_BYTES_PER_SLICE, 1, 0xff
res4a:	.fill FXV_NUM_SLICES * FXV_BYTES_PER_SLICE, 1, 0xff
res4b:	.fill FXV_NUM_SLICES * FXV_BYTES_PER_SLICE, 1, 0xff
res5a:	.fill FXV_NUM_SLICES * FXV_BYTES_PER_SLICE, 1, 0xff
res5b:	.fill FXV_NUM_SLICES * FXV_BYTES_PER_SLICE, 1, 0xff

PPCTEST_DATA_END
